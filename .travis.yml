language: cpp
compiler: gcc
dist: bionic
os: linux

#env:
#  global:
#    - CODECOV_TOKEN="619b8930-01d6-41d0-8c11-9f91f7fa0f83"

addons:
  apt:
    packages: 
     - lcov
     - cmake-data
     - cmake

cache:
  directories:
    - /home/openmpi

before_install:
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - test -n $CC && unset CC
  - pip install --user cpp-coveralls

install: 
  - sudo apt-get install -qq g++-9
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
#  - sudo apt-get install libopenmpi-dev openmpi-bin
  # install openmpi 4
  - wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
  - gunzip -c openmpi-4.0.2.tar.gz | tar xf -
  - rm openmpi-4.0.2.tar.gz
  - cd openmpi-4.0.2
  - ./configure --prefix=/home/openmpi --exec-prefix=/home/openmpi
  - make -j $(nproc)
  - sudo make install
  - rm -r openmpi-4.0.2
  - export PATH=$PATH:/home/openmpi/bin

before_script:
  - echo "Versions:\n" & g++ --version && cmake --version && mpirun --version
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DENABLE_COVERAGE=ON -DGEN_DOCS=OFF ..

script: 
  - make -j $(nproc)
  - ctest --output-on-failure


after_success:
# Create lcov report
# capture coverage info
#- lcov --directory . --capture --output-file coverage.info
# filter out system and extra files.
# To also not include test code in coverage add them with full path to the patterns: '*/tests/*'
#- lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
# output coverage data for debugging (optional)
#- lcov --list coverage.info
# Uploading to CodeCov
# '-f' specifies file(s) to use and disables manual coverage gathering and file search which has already been done above
#- bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
  - coveralls --root . -E ".*gtest.*" -E ".*CMakeFiles.*"
